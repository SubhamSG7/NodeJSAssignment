Q. What is -Infinity in js?
----
In JavaScript, -Infinity (negative infinity) is a special numeric value that represents 
a value that is smaller than any other number. It is used to represent values that are 
considered infinitely small or negative infinity. Here's an example of how you might 
encounter -Infinity:

example--
let x = -Infinity;
console.log(x); // Output: -Infinity
console.log(x < 0); // Output: true
console.log(x > -1000); // Output: false (because -Infinity is smaller than any other number)


What is === operator?
--- triple equal operator used to check the datas are equal or not as well as the
data-types are equal or not


What are the disadvantages of using innerHTML in JavaScript?
--
Using innerHTML in JavaScript can be convenient for manipulating the content of HTML elements, 
but it also comes with several disadvantages and potential risks.

1.Security Risks (XSS Attacks):

One of the biggest concerns with innerHTML is that it can expose your application to Cross-Site 
Scripting (XSS) attacks if you're not careful about sanitizing the content. If you insert 
user-generated content directly into the DOM without sanitizing it, an attacker could inject 
malicious scripts.

example: 
// Unsafe: If `userInput` contains malicious script, it will be executed
element.innerHTML = userInput;

2.Performance Issues:

Setting innerHTML can be inefficient because it removes all existing child elements and 
then re-parses the new HTML string. This can be particularly slow for large DOM trees or 
frequent updates.

example:
// Replaces entire content, even if only a small part needs updating
element.innerHTML = "<p>New content</p>";

3.Loss of Event Handlers:

When you use innerHTML to replace content, any event handlers attached to the replaced 
elements are lost. This happens because the elements are destroyed and new elements 
are created.

example:
element.innerHTML = '<button id="myButton">Click me</button>';
document.getElementById('myButton').addEventListener('click', () => alert('Clicked!'));

// If innerHTML is used again to change content
element.innerHTML = '<p>New content</p>';
// The event handler attached to 'myButton' is lost

